{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/gallery/add-image/add-image.component.html","webpack:///./src/app/gallery/add-image/add-image.component.scss","webpack:///./src/app/gallery/add-image/add-image.component.ts","webpack:///./src/app/gallery/gallery-audio-details/gallery-audio-details.component.html","webpack:///./src/app/gallery/gallery-audio-details/gallery-audio-details.component.scss","webpack:///./src/app/gallery/gallery-audio-details/gallery-audio-details.component.ts","webpack:///./src/app/gallery/gallery-image-details/gallery-image-details.component.html","webpack:///./src/app/gallery/gallery-image-details/gallery-image-details.component.scss","webpack:///./src/app/gallery/gallery-image-details/gallery-image-details.component.ts","webpack:///./src/app/gallery/gallery-video-details/gallery-video-details.component.html","webpack:///./src/app/gallery/gallery-video-details/gallery-video-details.component.scss","webpack:///./src/app/gallery/gallery-video-details/gallery-video-details.component.ts","webpack:///./src/app/gallery/gallery.component.html","webpack:///./src/app/gallery/gallery.component.scss","webpack:///./src/app/gallery/gallery.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.scss","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/register-users/register-users.component.html","webpack:///./src/app/register-users/register-users.component.scss","webpack:///./src/app/register-users/register-users.component.ts","webpack:///./src/app/services/details-rest-client.service.ts","webpack:///./src/app/services/gallery-rest-client.service.ts","webpack:///./src/app/services/image-rest-client.service.ts","webpack:///./src/app/services/login-rest-client.service.ts","webpack:///./src/app/services/register-users-rest-client.service.ts","webpack:///./src/app/services/storage.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { GalleryAudioDetailsComponent } from './gallery/gallery-audio-details/gallery-audio-details.component';\r\nimport { GalleryImageDetailsComponent } from './gallery/gallery-image-details/gallery-image-details.component';\r\nimport { GalleryVideoDetailsComponent } from './gallery/gallery-video-details/gallery-video-details.component';\r\nimport { AddImageComponent } from './gallery/add-image/add-image.component';\r\nimport { GalleryComponent } from './gallery/gallery.component';\r\nimport { RegisterUsersComponent } from './register-users/register-users.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n\t{ path: '', redirectTo: '/gallery', pathMatch: 'full' },\r\n\t{\r\n\t\tpath: 'gallery',\r\n\t\tcomponent: GalleryComponent\r\n\t},\r\n\t{\r\n\t\tpath: 'gallery/audio-details/:id',\r\n\t\tcomponent: GalleryAudioDetailsComponent\r\n\t},\r\n\t{\r\n\t\tpath: 'gallery/image-details/:id',\r\n\t\tcomponent: GalleryImageDetailsComponent\r\n\t},\r\n\t{\r\n\t\tpath: 'gallery/video-details/:id',\r\n\t\tcomponent: GalleryVideoDetailsComponent\r\n\t},{\r\n\t\tpath: 'gallery/addimage',\r\n\t\tcomponent: AddImageComponent\r\n\t},\r\n\t{\r\n\t\tpath: 'gallery/registerUser',\r\n\t\tcomponent: RegisterUsersComponent\r\n\t}\r\n\t,\r\n\t{\r\n\t\tpath: 'login',\r\n\t\tcomponent: LoginComponent\r\n\t}\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forRoot(routes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { GalleryComponent } from './gallery/gallery.component';\r\nimport { GalleryRestClientService } from './services/gallery-rest-client.service';\r\nimport { HttpModule } from '@angular/http';\r\nimport { GalleryAudioDetailsComponent } from './gallery/gallery-audio-details/gallery-audio-details.component';\r\nimport { GalleryImageDetailsComponent } from './gallery/gallery-image-details/gallery-image-details.component';\r\nimport { GalleryVideoDetailsComponent } from './gallery/gallery-video-details/gallery-video-details.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { DetailsRestClient } from './services/details-rest-client.service';\r\nimport { StorageService } from './services/storage.service';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AddImageComponent } from './gallery/add-image/add-image.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RegisterUsersComponent } from './register-users/register-users.component';\r\nimport { RegisterUsersRestClientService } from './services/register-users-rest-client.service';\r\nimport { ImageRestClient } from './services/image-rest-client.service';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LoginRestClientService } from './services/login-rest-client.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    GalleryComponent,\r\n    GalleryAudioDetailsComponent,\r\n    GalleryImageDetailsComponent,\r\n    GalleryVideoDetailsComponent,\r\n    NavbarComponent,\r\n    AddImageComponent,\r\n    RegisterUsersComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ],\r\n  providers: [GalleryRestClientService, DetailsRestClient, StorageService, RegisterUsersRestClientService,ImageRestClient,LoginRestClientService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"justify-content-center flex-column\\\">\\r\\n      <form [formGroup]=\\\"imageForm\\\" (ngSubmit)=\\\"submit()\\\" novalidate>\\r\\n \\r\\n        \\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"Nombre\\\">Nombre</label>\\r\\n                  <input formControlName=\\\"Nombre\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Nombre\\\"\\r\\n                      placeholder=\\\"Nombre de la imagen\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"Url\\\">Url</label>\\r\\n                  <input  [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"Url\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Url\\\"\\r\\n                      placeholder=\\\"Url de la imagen\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"Titulo\\\">Titulo</label>\\r\\n                  <input formControlName=\\\"Titulo\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Titulo\\\"\\r\\n                      placeholder=\\\"Titulo de la imagen\\\">\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"Ciudad\\\">Ciudad</label>\\r\\n                  <input formControlName=\\\"Ciudad\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Ciudad\\\"\\r\\n                      placeholder=\\\"Cidad de la imagen\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"Pais\\\">Pais</label>\\r\\n                  <input formControlName=\\\"Pais\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Pais\\\"\\r\\n                      placeholder=\\\"Pais de la imagen\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"Descripcion\\\">Descripcion</label>\\r\\n                  <input formControlName=\\\"Descripcion\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Descripcion\\\"\\r\\n                      placeholder=\\\"Descripcion de la imagen\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"Tipo\\\">Tipo</label>\\r\\n                  <input formControlName=\\\"Tipo\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Tipo\\\"\\r\\n                      placeholder=\\\"Tipo de la imagen\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"Archivo\\\">Archivo</label>\\r\\n                  <input  (change)=\\\"onFileSelected($event)\\\" type=\\\"file\\\" class=\\\"form-control\\\"  #selectFile\\r\\n                      placeholder=\\\"Archivo de la imagen\\\">\\r\\n              </div>\\r\\n          \\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!imageForm.valid\\\">Agregar Imagen</button>\\r\\n      </form>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhbGxlcnkvYWRkLWltYWdlL2FkZC1pbWFnZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit} from '@angular/core';\r\nimport { ImageRestClient } from 'src/app/services/image-rest-client.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { StorageService } from 'src/app/services/storage.service';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-add-image',\r\n  templateUrl: './add-image.component.html',\r\n  styleUrls: ['./add-image.component.scss']\r\n})\r\nexport class AddImageComponent implements OnInit {\r\n\r\n  id: string;\r\n  users: any;\r\n  image: any;\r\n  imageForm: FormGroup;\r\n  Url: String;\r\n  selectFile:File;\r\n  onFileSelected(event) {\r\n    console.log(event);\r\n    this.selectFile = event.target.files[0]; \r\n  }\r\n\r\n\r\n  constructor(public storageService: StorageService, private route: ActivatedRoute, private imageRestClient: ImageRestClient, private formBuilder: FormBuilder,\r\n  ) {\r\n   \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n  }\r\n\r\n  public buildForm() {\r\n    this.imageForm = this.formBuilder.group({\r\n      Nombre: new FormControl('', Validators.required),\r\n     \r\n      Titulo: new FormControl('', Validators.required),\r\n      Ciudad: new FormControl('', Validators.required),\r\n      Pais: new FormControl('', Validators.required),\r\n      Descripcion : new FormControl('', Validators.required),\r\n      Tipo : new FormControl('', Validators.required),\r\n      \r\n    });\r\n  \r\n  }\r\n\r\n  public submit(): void {\r\n    const Nombre = this.imageForm.get('Nombre').value;\r\n    const Url = this.Url;\r\n    const Titulo = this.imageForm.get('Titulo').value;\r\n    const date = new Date();\r\n    const Ciudad = this.imageForm.get('Ciudad').value;\r\n    const Pais = this.imageForm.get('Pais').value;\r\n    const Descripcion = this.imageForm.get('Descripcion').value;\r\n    const Tipo = this.imageForm.get('Tipo').value;\r\n    const Archivo = this.selectFile;\r\n    const imagen = { \"name\": Nombre,\"author\":Nombre,\"url\": Url ,\"title\":Titulo ,\"date\":date,\"city\":Ciudad,\"country\":Pais,\"Descripcion\":Descripcion,\"type\":Tipo,\"Archivo\":Archivo,\"User\":1};\r\n    \r\n    this.imageRestClient.createImage(imagen).subscribe(response => {\r\n      alert(\"Imagen agregada\");\r\n    })\r\n\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"justify-content-center flex-column\\\">\\r\\n        <audio height=\\\"200px\\\" id=\\\"audio\\\" [src]=\\\"audio?.url\\\" controls></audio>\\r\\n\\r\\n        <h1>Detalles</h1>\\r\\n        <table class=\\\"table table-sm table-dark\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th scope=\\\"col\\\">#</th>\\r\\n                    <th scope=\\\"col\\\">Nombre</th>\\r\\n                    <th scope=\\\"col\\\">Titulo</th>\\r\\n                    <th scope=\\\"col\\\">Autor</th>\\r\\n                    <th scope=\\\"col\\\">Fecha</th>\\r\\n                    <th scope=\\\"col\\\">Ciudad</th>\\r\\n                    <th scope=\\\"col\\\">Pais</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr>\\r\\n                    <th scope=\\\"row\\\">{{id}}</th>\\r\\n                    <td>{{audio.name}}</td>\\r\\n                    <td>{{audio.title}}</td>\\r\\n                    <td>{{audio.author}}</td>\\r\\n                    <td>{{audio.date  | date: 'dd/MM/yyyy'}}</td>\\r\\n                    <td>{{audio.city}}</td>\\r\\n                    <td>{{audio.country}}</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n\\r\\n        <h1 *ngIf=\\\"this.storageService.isLogged\\\">clips</h1>\\r\\n        <table *ngIf=\\\"this.storageService.isLogged\\\" class=\\\"table table-sm table-dark\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th scope=\\\"col\\\">#</th>\\r\\n                    <th scope=\\\"col\\\">Nombre</th>\\r\\n                    <th scope=\\\"col\\\">Segundo de Inicio</th>\\r\\n                    <th scope=\\\"col\\\">Segundo de Fin</th>\\r\\n                    <th scope=\\\"col\\\">Ver clip</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let clip of clips; let i = index\\\">\\r\\n                    <th scope=\\\"row\\\">{{i}}</th>\\r\\n                    <td>{{clip.name}}</td>\\r\\n                    <td>{{clip.secondstart}}</td>\\r\\n                    <td>{{clip.secondend}}</td>\\r\\n                    <td> <button (click)=\\\"watchClip(i)\\\" class=\\\"btn btn-secondary\\\">Reproducir Clip</button></td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n\\r\\n        <h1 *ngIf=\\\"this.storageService.isLogged\\\">Agregar Clip</h1>\\r\\n\\r\\n        <form *ngIf=\\\"this.storageService.isLogged\\\" [formGroup]=\\\"clipForm\\\" (ngSubmit)=\\\"submit()\\\" novalidate>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"inputClipName\\\">Nombre del clip</label>\\r\\n                <input formControlName=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputClipName\\\"\\r\\n                    placeholder=\\\"Nombre del clip\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                    <label for=\\\"inputSecondStart\\\">Segundo de inicio</label>\\r\\n                    <input formControlName=\\\"secondStart\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputSecondStart\\\"\\r\\n                        placeholder=\\\"Ejemplo 10\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                    <label for=\\\"inputSecondEnd\\\">Segundo Fin</label>\\r\\n                    <input formControlName=\\\"secondEnd\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputSecondEnd\\\"\\r\\n                        placeholder=\\\"Ejemplo 20\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!clipForm.valid\\\">Agregar Clip</button>\\r\\n        </form>\\r\\n    <br>\\r\\n        <button (click)=\\\"goBack()\\\" class=\\\"btn btn-secondary btn-lg btn-block\\\">Volver</button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhbGxlcnkvZ2FsbGVyeS1hdWRpby1kZXRhaWxzL2dhbGxlcnktYXVkaW8tZGV0YWlscy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { DetailsRestClient } from 'src/app/services/details-rest-client.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { StorageService } from 'src/app/services/storage.service';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'app-gallery-audio-details',\r\n  templateUrl: './gallery-audio-details.component.html',\r\n  styleUrls: ['./gallery-audio-details.component.scss']\r\n})\r\nexport class GalleryAudioDetailsComponent implements OnInit {\r\n\r\n  id: string;\r\n  audio: any;\r\n  clips: any[];\r\n  clipForm: FormGroup;\r\n  secondStart: number;\r\n  secondEnd: number;\r\n\r\n\r\n  constructor(public storageService: StorageService, \r\n    private route: ActivatedRoute, \r\n    private detailsRestClient: DetailsRestClient,\r\n     private formBuilder: FormBuilder,\r\n     private location: Location\r\n  ) {\r\n    this.getAudioDetails();\r\n    this.getAudiosClips();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n  }\r\n\r\n  public buildForm() {\r\n    this.clipForm = this.formBuilder.group({\r\n      name: new FormControl('', Validators.required),\r\n      secondStart: new FormControl('', Validators.required),\r\n      secondEnd: new FormControl('', Validators.required),\r\n    });\r\n  }\r\n\r\n  public getAudioDetails(): void {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.audio = this.storageService.audiosGallery[this.id]\r\n  }\r\n\r\n  public getAudiosClips(): void {\r\n    this.detailsRestClient.getAllAudiosClip().subscribe(data => {\r\n      this.clips = data.filter((item, index) => item.audioname == this.audio.name);\r\n    })\r\n  }\r\n\r\n  public submit(): void {\r\n    const name = this.clipForm.get('name').value;\r\n    const secondStart = this.clipForm.get('secondStart').value;\r\n    const secondEnd = this.clipForm.get('secondEnd').value;\r\n    const clip = { \"name\": name, \"secondstart\": secondStart, \"secondend\": secondEnd, \"audioname\": this.audio.name, 'email': this.storageService.userLogged.email  };\r\n    this.detailsRestClient.createAudioClip(clip).subscribe(response => {\r\n      this.getAudiosClips();\r\n      this.clipForm.reset();\r\n    })\r\n  }\r\n\r\n  public watchClip(i): void {\r\n    this.secondStart = Number(this.clips[i].secondstart);\r\n    this.secondEnd = Number(this.clips[i].secondend);\r\n    this.audio.url + \"#t=\" + this.secondStart + \",\" + this.secondEnd;\r\n    document.getElementById(\"audio\").setAttribute(\"src\", this.audio.url + \"#t=\" + this.secondStart + \",\" + this.secondEnd);\r\n    document.getElementById(\"audio\").setAttribute(\"autoplay\", \"autoplay\");\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"justify-content-center flex-column\\\">\\r\\n        <img height=\\\"200px\\\" [src]=\\\"image?.url\\\" controls>\\r\\n\\r\\n        <h1>Detalles</h1>\\r\\n        <table class=\\\"table table-sm table-dark\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th scope=\\\"col\\\">#</th>\\r\\n                    <th scope=\\\"col\\\">Nombre</th>\\r\\n                    <th scope=\\\"col\\\">Titulo</th>\\r\\n                    <th scope=\\\"col\\\">Autor</th>\\r\\n                    <th scope=\\\"col\\\">Fecha</th>\\r\\n                    <th scope=\\\"col\\\">Ciudad</th>\\r\\n                    <th scope=\\\"col\\\">Pais</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr>\\r\\n                    <th scope=\\\"row\\\">{{id}}</th>\\r\\n                    <td>{{image.name}}</td>\\r\\n                    <td>{{image.title}}</td>\\r\\n                    <td>{{image.author}}</td>\\r\\n                    <td>{{image.date  | date: 'dd/MM/yyyy'}}</td>\\r\\n                    <td>{{image.city}}</td>\\r\\n                    <td>{{image.country}}</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhbGxlcnkvZ2FsbGVyeS1pbWFnZS1kZXRhaWxzL2dhbGxlcnktaW1hZ2UtZGV0YWlscy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { StorageService } from 'src/app/services/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-gallery-image-details',\r\n  templateUrl: './gallery-image-details.component.html',\r\n  styleUrls: ['./gallery-image-details.component.scss']\r\n})\r\nexport class GalleryImageDetailsComponent implements OnInit {\r\n\r\n  id: string;\r\n  image: any;\r\n  clips: any[];\r\n  clipForm: FormGroup;\r\n\r\n\r\n\r\n  constructor(public storageService: StorageService, private route: ActivatedRoute) {\r\n    this.getImageDetails();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  public getImageDetails(): void {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.image = this.storageService.imagesGallery[this.id]\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"justify-content-center flex-column\\\">\\r\\n        <video height=\\\"200px\\\" id=\\\"video\\\" [src]=\\\"video.url\\\" controls></video>\\r\\n\\r\\n        <h1>Detalles</h1>\\r\\n        <table class=\\\"table table-sm table-dark\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th scope=\\\"col\\\">#</th>\\r\\n                    <th scope=\\\"col\\\">Nombre</th>\\r\\n                    <th scope=\\\"col\\\">Titulo</th>\\r\\n                    <th scope=\\\"col\\\">Autor</th>\\r\\n                    <th scope=\\\"col\\\">Fecha</th>\\r\\n                    <th scope=\\\"col\\\">Ciudad</th>\\r\\n                    <th scope=\\\"col\\\">Pais</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr>\\r\\n                    <th scope=\\\"row\\\">{{id}}</th>\\r\\n                    <td>{{video.name}}</td>\\r\\n                    <td>{{video.title}}</td>\\r\\n                    <td>{{video.author}}</td>\\r\\n                    <td>{{video.date  | date: 'dd/MM/yyyy'}}</td>\\r\\n                    <td>{{video.city}}</td>\\r\\n                    <td>{{video.country}}</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n\\r\\n        <h1 *ngIf=\\\"this.storageService.isLogged\\\" >clips</h1>\\r\\n        <table *ngIf=\\\"this.storageService.isLogged\\\" class=\\\"table table-sm table-dark\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th scope=\\\"col\\\">#</th>\\r\\n                    <th scope=\\\"col\\\">Nombre</th>\\r\\n                    <th scope=\\\"col\\\">Segundo de Inicio</th>\\r\\n                    <th scope=\\\"col\\\">Segundo de Fin</th>\\r\\n                    <th scope=\\\"col\\\">Ver clip</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let clip of clips; let i = index\\\">\\r\\n                    <th scope=\\\"row\\\">{{i}}</th>\\r\\n                    <td>{{clip.name}}</td>\\r\\n                    <td>{{clip.secondstart}}</td>\\r\\n                    <td>{{clip.secondend}}</td>\\r\\n                    <td> <button (click)=\\\"watchClip(i)\\\" class=\\\"btn btn-secondary\\\">Reproducir Clip</button></td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n\\r\\n        <h1 *ngIf=\\\"this.storageService.isLogged\\\">Agregar Clip</h1>\\r\\n\\r\\n        <form *ngIf=\\\"this.storageService.isLogged\\\" [formGroup]=\\\"clipForm\\\" (ngSubmit)=\\\"submit()\\\" novalidate>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"inputClipName\\\">Nombre del clip</label>\\r\\n                <input formControlName=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputClipName\\\"\\r\\n                    placeholder=\\\"Nombre del clip\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                    <label for=\\\"inputSecondStart\\\">Segundo de inicio</label>\\r\\n                    <input formControlName=\\\"secondStart\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputSecondStart\\\"\\r\\n                        placeholder=\\\"Ejemplo 10\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                    <label for=\\\"inputSecondEnd\\\">Segundo Fin</label>\\r\\n                    <input formControlName=\\\"secondEnd\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputSecondEnd\\\"\\r\\n                        placeholder=\\\"Ejemplo 20\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!clipForm.valid\\\">Agregar Clip</button>\\r\\n        </form>\\r\\n        <br> <button (click)=\\\"goBack()\\\" class=\\\"btn btn-secondary btn-lg btn-block\\\">Volver</button>\\r\\n    </div>\\r\\n\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhbGxlcnkvZ2FsbGVyeS12aWRlby1kZXRhaWxzL2dhbGxlcnktdmlkZW8tZGV0YWlscy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { DetailsRestClient } from 'src/app/services/details-rest-client.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { StorageService } from 'src/app/services/storage.service';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'app-gallery-video-details',\r\n  templateUrl: './gallery-video-details.component.html',\r\n  styleUrls: ['./gallery-video-details.component.scss']\r\n})\r\nexport class GalleryVideoDetailsComponent implements OnInit {\r\n\r\n  id: string;\r\n  video: any;\r\n  clipForm: FormGroup;\r\n  clips: any[];\r\n  secondStart: number;\r\n  secondEnd: number;\r\n\r\n\r\n\r\n\r\n  constructor(public storageService: StorageService,\r\n    private route: ActivatedRoute,\r\n    private detailsRestClient: DetailsRestClient,\r\n    private formBuilder: FormBuilder,\r\n    private location: Location,\r\n  ) {\r\n    this.getVideoDetails();\r\n    this.getVideosClips();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n  }\r\n\r\n  public buildForm() {\r\n    this.clipForm = this.formBuilder.group({\r\n      name: new FormControl('', Validators.required),\r\n      secondStart: new FormControl('', Validators.required),\r\n      secondEnd: new FormControl('', Validators.required),\r\n    });\r\n  }\r\n\r\n  public getVideoDetails(): void {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.video = this.storageService.videosGallery[this.id]\r\n  }\r\n\r\n  public getVideosClips(): void {\r\n    this.detailsRestClient.getAllVideosClip().subscribe(data => {\r\n      this.clips = data.filter((item, index) => item.videoname == this.video.name);\r\n    })\r\n  }\r\n\r\n  public submit(): void {\r\n    const name = this.clipForm.get('name').value;\r\n    const secondStart = this.clipForm.get('secondStart').value;\r\n    const secondEnd = this.clipForm.get('secondEnd').value;\r\n    const clip = { \"name\": name, \"secondstart\": secondStart, \"secondend\": secondEnd, \"videoname\": this.video.name, 'email': this.storageService.userLogged.email };\r\n    this.detailsRestClient.createVideoClip(clip).subscribe(response => {\r\n      this.getVideosClips();\r\n      this.clipForm.reset();\r\n    })\r\n\r\n  }\r\n\r\n  public watchClip(i): void {\r\n    this.secondStart = Number(this.clips[i].secondstart);\r\n    this.secondEnd = Number(this.clips[i].secondend);\r\n    this.video.url + \"#t=\" + this.secondStart + \",\" + this.secondEnd;\r\n    document.getElementById(\"video\").setAttribute(\"src\", this.video.url + \"#t=\" + this.secondStart + \",\" + this.secondEnd);\r\n    document.getElementById(\"video\").setAttribute(\"autoplay\", \"autoplay\");\r\n  }\r\n\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <h1>Galeria</h1>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-auto\\\" *ngFor=\\\"let videoGallery of storageService.videosGallery ; let i = index\\\">\\r\\n      <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\r\\n        <video height=\\\"200px\\\" [src]=\\\"videoGallery.url\\\" controls></video>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h5 class=\\\"card-title\\\">{{videoGallery.title}}</h5>\\r\\n          <p class=\\\"card-text\\\">{{videoGallery.author}}</p>\\r\\n          <p class=\\\"card-text\\\">{{videoGallery.date | date: 'dd/MM/yyyy'}}</p>\\r\\n          <a routerLink=\\\"video-details/{{i}}\\\" class=\\\"btn btn-primary\\\">Ver detalles</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-auto\\\" *ngFor=\\\"let imageGallery of storageService.imagesGallery ; let i = index\\\">\\r\\n      <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\r\\n        <img height=\\\"200px\\\" [src]=\\\"imageGallery.url\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h5 class=\\\"card-title\\\">{{imageGallery.title}}</h5>\\r\\n          <p class=\\\"card-text\\\">{{imageGallery.author}}</p>\\r\\n          <p class=\\\"card-text\\\">{{imageGallery?.date | date: 'dd/MM/yyyy'}}</p>\\r\\n          <a routerLink=\\\"image-details/{{i}}\\\" class=\\\"btn btn-primary\\\">Ver detalles</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-auto\\\" *ngFor=\\\"let audioGallery of storageService.audiosGallery ; let i = index\\\">\\r\\n      <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\r\\n        <div style=\\\"width:90%\\\">\\r\\n          <audio [src]=\\\"audioGallery.url\\\" controls></audio>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h5 class=\\\"card-title\\\">{{audioGallery.title}}</h5>\\r\\n          <p class=\\\"card-text\\\">{{audioGallery.author}}</p>\\r\\n          <p class=\\\"card-text\\\">{{audioGallery?.date | date: 'dd/MM/yyyy'}}</p>\\r\\n          <a routerLink=\\\"audio-details/{{i}}\\\" class=\\\"btn btn-primary\\\">Ver detalles</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhbGxlcnkvZ2FsbGVyeS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { GalleryRestClientService } from '../services/gallery-rest-client.service';\r\nimport { StorageService } from '../services/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-gallery',\r\n  templateUrl: './gallery.component.html',\r\n  styleUrls: ['./gallery.component.scss']\r\n})\r\nexport class GalleryComponent implements OnInit {\r\n\r\n  constructor(private galleryRestClientService: GalleryRestClientService, public storageService: StorageService) { }\r\n\r\n  audiosGallery: any[];\r\n  videosGallery: any[];\r\n  imagesGallery: any[];\r\n\r\n\r\n  ngOnInit() {\r\n    this.galleryRestClientService.getAllVideosGallery().subscribe(data => {\r\n      this.storageService.videosGallery = data;\r\n    })\r\n\r\n    this.galleryRestClientService.getAllAudiosGallery().subscribe(data => {\r\n      this.storageService.audiosGallery = data;\r\n    })\r\n\r\n    this.galleryRestClientService.getAllImagesGallery().subscribe(data => {\r\n      this.storageService.imagesGallery = data;\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"justify-content-center flex-column\\\">\\r\\n    <img src=\\\"http://www3.uah.es/master_psicopedagogiaUAH/wp-content/uploads/2015/06/galeria_banner.jpg\\\">\\r\\n    <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"exampleInputEmail1\\\">Usuario</label>\\r\\n        <input formControlName=\\\"user\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\r\\n          aria-describedby=\\\"user\\\" placeholder=\\\"user\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"exampleInputPassword1\\\">Password</label>\\r\\n        <input formControlName=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"exampleInputPassword1\\\"\\r\\n          placeholder=\\\"Password\\\">\\r\\n      </div>\\r\\n      <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"First group\\\">\\r\\n        <button type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-primary\\\">Login</button>\\r\\n      </div>\\r\\n      <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"First group\\\">\\r\\n        <a routerLink=\\\"/gallery\\\" class=\\\"btn btn-primary\\\">Volver</a>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LoginRestClientService } from '../services/login-rest-client.service';\r\nimport { StorageService } from '../services/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private loginRestClientService: LoginRestClientService,\r\n    private storageService: StorageService,\r\n    private router: Router\r\n  ) {\r\n    this.storageService.isLogged = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.storageService.isLogged = false;\r\n    this.buildForm();\r\n  }\r\n\r\n  public buildForm() {\r\n    this.loginForm = this.formBuilder.group({\r\n      user: new FormControl('', Validators.required),\r\n      password: new FormControl('', Validators.required)\r\n    });\r\n  }\r\n\r\n\r\n  public submit(): void {\r\n    const name = this.loginForm.get('user').value;\r\n    const password = this.loginForm.get('password').value;\r\n    const credentials = { \"login\": name, \"password\": password };\r\n    this.loginRestClientService.authenticate(credentials).subscribe(response => {\r\n      console.log(response);\r\n      this.storageService.userLogged = response;\r\n      this.storageService.isLogged = true;\r\n      this.router.navigate(['gallery']);\r\n    }, error => {\r\n      console.log(error);\r\n      alert(\"Usuario o Password invalido\");\r\n      this.loginForm.reset();\r\n    }\r\n    )\r\n\r\n  }\r\n}\r\n","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/gallery\\\">Galeria</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\r\\n    aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li *ngIf=\\\"!this.storageService.isLogged\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">login</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"this.storageService.isLogged\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/gallery/addimage\\\">Adicionar imagen</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"!this.storageService.isLogged\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/gallery/registerUser\\\">Registrarse</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"this.storageService.isLogged\\\" class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" (click)=\\\"sessionClose()\\\">Cerrar Sesion</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { StorageService } from '../services/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(public storageService: StorageService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public sessionClose(): void {\r\n    this.storageService.isLogged = false;\r\n  }\r\n\r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<!--Grid column-->\\r\\n<div class=\\\"col-md-6 col-xl-5 mb-4\\\">\\r\\n\\r\\n  <!--Card-->\\r\\n  <div class=\\\"card\\\">\\r\\n\\r\\n    <!-- Form -->\\r\\n    <form name=\\\"\\\" class=\\\"card\\\" [formGroup]=\\\"registerForm\\\">\\r\\n      <!-- Heading -->\\r\\n      <h3 class=\\\"dark-grey-text text-center\\\">\\r\\n        <strong>Registro:</strong>\\r\\n      </h3>\\r\\n      <hr>\\r\\n\\r\\n      <div class=\\\"md-form\\\">\\r\\n        <i class=\\\"fas fa-user prefix grey-text\\\"></i>\\r\\n        <label for=\\\"form3\\\">Usuario: </label>\\r\\n        <input id=\\\"login\\\" formControlName=\\\"login\\\" type=\\\"text\\\" class=\\\"form-control\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"md-form\\\">\\r\\n        <i class=\\\"fas fa-envelope prefix grey-text\\\"></i>\\r\\n        <label for=\\\"form2\\\">Contraseña: </label>\\r\\n        <input id=\\\"password\\\" formControlName=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"md-form\\\">\\r\\n        <i class=\\\"fas fa-user prefix grey-text\\\"></i>\\r\\n        <label for=\\\"form3\\\">Nombre: </label>\\r\\n        <input id=\\\"name\\\" formControlName=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"md-form\\\">\\r\\n        <i class=\\\"fas fa-user prefix grey-text\\\"></i>\\r\\n        <label for=\\\"form3\\\">Apellido: </label>\\r\\n        <input id=\\\"lastname\\\" formControlName=\\\"lastname\\\" type=\\\"text\\\" class=\\\"form-control\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"md-form\\\">\\r\\n        <i class=\\\"fas fa-envelope prefix grey-text\\\"></i>\\r\\n        <label for=\\\"form2\\\">Correo: </label>\\r\\n        <input id=\\\"email\\\" formControlName=\\\"email\\\" type=\\\"email\\\" class=\\\"form-control\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"md-form\\\">\\r\\n        <i class=\\\"fas fa-envelope prefix grey-text\\\"></i>\\r\\n        <label for=\\\"form2\\\">URL Fotografia: </label>\\r\\n        <input id=\\\"photo\\\" formControlName=\\\"photo\\\" type=\\\"url\\\" class=\\\"form-control\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"md-form\\\">\\r\\n        <i class=\\\"fas fa-envelope prefix grey-text\\\"></i>\\r\\n        <label for=\\\"form2\\\">Ciudad: </label>\\r\\n        <input id=\\\"city\\\" formControlName=\\\"city\\\" type=\\\"text\\\" class=\\\"form-control\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"md-form\\\">\\r\\n        <i class=\\\"fas fa-envelope prefix grey-text\\\"></i>\\r\\n        <label for=\\\"form2\\\">País: </label>\\r\\n        <input id=\\\"country\\\" formControlName=\\\"country\\\" type=\\\"text\\\" class=\\\"form-control\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"text-center\\\">\\r\\n        <button class=\\\"btn btn-info btn-sm\\\" id=\\\"send\\\" name=\\\"send\\\" type=\\\"submit\\\" (click)=\\\"register()\\\">Submit</button>\\r\\n        <hr>\\r\\n        <button class=\\\"btn btn-info btn-sm\\\" (click)=\\\"goBack()\\\">Cancelar</button>\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n    <!-- Form -->\\r\\n\\r\\n  </div>\\r\\n  <!--/.Card-->\\r\\n\\r\\n</div>\\r\\n<!--Grid column-->\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyLXVzZXJzL3JlZ2lzdGVyLXVzZXJzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Route, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { RegisterUsersRestClientService } from '../services/register-users-rest-client.service';\r\n\r\n@Component({\r\n  selector: 'app-register-users',\r\n  templateUrl: './register-users.component.html',\r\n  styleUrls: ['./register-users.component.scss']\r\n})\r\nexport class RegisterUsersComponent implements OnInit {\r\n\r\n  registerForm: FormGroup;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private location: Location,\r\n    private registerUsersRestClientService: RegisterUsersRestClientService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = new FormGroup({\r\n      login: new FormControl('', Validators.required),\r\n      name: new FormControl('', Validators.required),\r\n      lastname: new FormControl('', Validators.required),\r\n      password: new FormControl('', Validators.required),\r\n      email: new FormControl('', Validators.required),\r\n      city: new FormControl('', Validators.required),\r\n      country: new FormControl('', Validators.required),\r\n      photo: new FormControl(),\r\n    });\r\n\r\n  };\r\n\r\n  register() {\r\n    const login = this.registerForm.get('login').value; \r\n    const password = this.registerForm.get('password').value;\r\n    const name = this.registerForm.get('name').value; \r\n    const lastname = this.registerForm.get('lastname').value;\r\n    const email = this.registerForm.get('email').value;\r\n    const city = this.registerForm.get('city').value;\r\n    const country = this.registerForm.get('country').value;\r\n    const photo = this.registerForm.get('photo').value;\r\n    const user = {'login': login, 'password': password,'name': name, 'lastname': lastname, 'email': email, 'photo':photo, 'city':city, 'country':country};\r\n    this.registerUsersRestClientService.register(user).subscribe(response => {\r\n      console.log(response);\r\n      this.router.navigate(['gallery']);\r\n    }, error => {\r\n      console.log(error);\r\n      alert(\"Formulario Invalido\");\r\n      this.registerForm.reset();\r\n    }\r\n    );\r\n  };\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  };\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class DetailsRestClient {\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  getAllVideosClip(): Observable<any[]> {\r\n    return this.http.get(\"https://grupo1-app-rest.herokuapp.com/clipVideo/\").pipe(\r\n      map(reponse => reponse.json())\r\n    );\r\n  }\r\n\r\n\r\n  getAllAudiosClip(): Observable<any[]> {\r\n    return this.http.get(\"https://grupo1-app-rest.herokuapp.com/clipAudio/\").pipe(\r\n      map(reponse => reponse.json())\r\n    );\r\n  }\r\n\r\n  createVideoClip(videoClip: any): Observable<any> {\r\n    return this.http.post(\"https://grupo1-app-rest.herokuapp.com/clipVideo/\", videoClip).pipe(map(response => { }));\r\n  }\r\n\r\n  createImage(image: any): Observable<any> {\r\n    return this.http.post(\"https://grupo1-app-rest.herokuapp.com/images/\", image).pipe(map(response => { }));\r\n  }\r\n\r\n  createAudioClip(audioClip: any): Observable<any> {\r\n    return this.http.post(\"https://grupo1-app-rest.herokuapp.com/clipAudio/\", audioClip).pipe(map(response => { }));\r\n  }\r\n\r\n  getUsers(): Observable<any> {\r\n    return this.http.get(\"https://grupo1-app-rest.herokuapp.com/registerUser/\").pipe(\r\n      map(reponse => reponse.json())\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\n","import { Http } from '@angular/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class GalleryRestClientService {\r\n\r\n  constructor(private http: Http) { }\r\n\r\n\r\n\r\n  getAllAudiosGallery(): Observable<any> {\r\n    return this.http.get(\"https://grupo1-app-rest.herokuapp.com/audios/\").pipe(\r\n      map(reponse => reponse.json())\r\n    );\r\n  }\r\n\r\n  getAllVideosGallery(): Observable<any> {\r\n    return this.http.get(\"https://grupo1-app-rest.herokuapp.com/videos/\").pipe(\r\n      map(reponse => reponse.json())\r\n    );\r\n  }\r\n\r\n  getAllImagesGallery(): Observable<any> {\r\n    return this.http.get(\"https://grupo1-app-rest.herokuapp.com/images/\").pipe(\r\n      map(reponse => reponse.json())\r\n    );\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ImageRestClient {\r\n\r\n  constructor(private http: Http) { }\r\n\r\n\r\n  createImage(image: any): Observable<any> {\r\n    return this.http.post(\"https://grupo1-app-rest.herokuapp.com/images/\", image).pipe(map(response => { }));\r\n  }\r\n\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class LoginRestClientService {\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  authenticate(credentials: any): Observable<any> {\r\n\r\n    return this.http.post(\"https://grupo1-app-rest.herokuapp.com/loginUser/\", credentials).pipe(\r\n      map(reponse => reponse.json())\r\n    );\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class RegisterUsersRestClientService {\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  register(user: any): Observable<any> {\r\n    return this.http.post(\"https://grupo1-app-rest.herokuapp.com/registerUser/\", user).pipe(map(response => { }));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class StorageService {\r\n\r\n  public imagesGallery: any[];\r\n  public videosGallery: any[];\r\n  public audiosGallery: any[];\r\n  public isLogged: boolean;\r\n  public userLogged: any;\r\n\r\n  constructor() { }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}